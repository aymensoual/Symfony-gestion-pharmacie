<?php

namespace CatalogueBundle\Entity;

use Doctrine\ORM\Mapping as ORM;

/**
 * Article
 *
 * @ORM\Table(name="article")
 * @ORM\Entity(repositoryClass="CatalogueBundle\Repository\ArticleRepository")
 */
class Article {

    /**
     * @var int
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;

    /**
     * @var string
     *
     * @ORM\Column(name="nom", type="string", length=255)
     */
    private $nom;

    /**
     * @var string
     *
     * @ORM\Column(name="description", type="text")
     */
    private $description;

    /**
     * @var float
     *
     * @ORM\Column(name="prix", type="float")
     */
    private $prix;

    /**
     * @var int
     *
     * @ORM\Column(name="qtn", type="integer")
     */
    private $qtn;

    /**
     * @var string
     *
     * @ORM\Column(name="token", type="string", length=255, nullable=false, unique=true)
     */
    private $token;

    /**     
     * @ORM\OneToOne(targetEntity="CatalogueBundle\Entity\Media")
     * @ORM\JoinColumn{Nullable=false} 
     */
    private $Media;


   /**     *
    * @ORM\ManyToOne(targetEntity="CatalogueBundle\Entity\Categories")
    * @ORM\JoinColumn{Nullable=false} 
    */
    
    private $categorie;



    public function __construct() {
        $this->token = base_convert(sha1(uniqid(mt_rand(1, 999), true)), 16, 36);
    }

    /**
     * Get id
     *
     * @return int
     */
    public function getId() {
        return $this->id;
    }

    /**
     * Set nom
     *
     * @param string $nom
     *
     * @return Article
     */
    public function setNom($nom) {
        $this->nom = $nom;

        return $this;
    }

    /**
     * Get nom
     *
     * @return string
     */
    public function getNom() {
        return $this->nom;
    }

    /**
     * Set description
     *
     * @param string $description
     *
     * @return Article
     */
    public function setDescription($description) {
        $this->description = $description;

        return $this;
    }

    /**
     * Get description
     *
     * @return string
     */
    public function getDescription() {
        return $this->description;
    }

    /**
     * Set prix
     *
     * @param float $prix
     *
     * @return Article
     */
    public function setPrix($prix) {
        $this->prix = $prix;

        return $this;
    }

    /**
     * Get prix
     *
     * @return float
     */
    public function getPrix() {
        return $this->prix;
    }

    /**
     * Set qtn
     *
     * @param integer $qtn
     *
     * @return Article
     */
    public function setQtn($qtn) {
        $this->qtn = $qtn;

        return $this;
    }

    /**
     * Get qtn
     *
     * @return int
     */
    public function getQtn() {
        return $this->qtn;
    }

    /**
     * Set token
     *
     * @param string $token
     *
     * @return Article
     */
    public function setToken($token) {
        $this->token = $token;

        return $this;
    }

    /**
     * Get token
     *
     * @return string
     */
    public function getToken() {
        return $this->token;
    }


    /**
     * Set categorie
     *
     * @param \CatalogueBundle\Entity\Categories $categorie
     *
     * @return Article
     */
    public function setCategorie(\CatalogueBundle\Entity\Categories $categorie = null)
    {
        $this->categorie = $categorie;

        return $this;
    }

    /**
     * Get categorie
     *
     * @return \CatalogueBundle\Entity\Categories
     */
    public function getCategorie()
    {
        return $this->categorie;
    }
}
